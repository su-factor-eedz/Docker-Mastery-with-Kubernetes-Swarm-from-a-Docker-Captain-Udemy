# 55. Docker Compose and The docker-compose.yml File
## Docker Compose
- configure relationships between containers
- save docker container run settings in easy-to-read file
- spin them up and tear down with one command

### Two Parts of Docker Compose
1. YAML File - describes solution options for containers, networks, volumes, environment variables, images, ...
2. [docker-compose] CLI Tool - used for local dev/test automation with those YAML files

- Docker Compose used to be called "fig" -- version 1, though it didn't have a version line
- Compose YAML Format has its own versions, which are now specified as the first line in the file
- as of [version 1.13+], can be used beyond local dev/test in production with [Swarm] using [docker] command lin
- [docker-compose --help]
- [docker-compose.yml] default filename
- [docker-compose -f] can be used to specify different file name
- [spaces] in hierarchy have a YAML-specific convention
- At minimum, have [version] start with at least v 2 outherwise lose features and [services] correspond to the containers; [volumes] are like volume create and [networks] like network create are [optional]
- see /Proj/study/udemy/udemy-docker-mastery/compose-sample-1 [template.yml], [docker-compose.yml] where [ports] is for [--publish], [compose-2.yml] where [environment] list doesn't use dashes, and [compose-3.yml] where [environment] does use dashes and [depends_on] in [mysql-secondary] service is used to show relationship to [mysql-primary] service.

[[Resources]]
YAML GET STARTED
https://yaml.org/start.html

%YAML 1.1   # Reference card
https://yaml.org/refcard.html

Compose file versions and upgrading
https://docs.docker.com/compose/compose-file/compose-versioning/

Docker Compose Release Downloads
https://github.com/docker/compose/releases

SO6-Compose-Slides.pdf
DM-S06-Commands.txt
SO6-Compose-Slides.pdf


# 56. Trying Out Basic Compose Commands
## Docker Compose CLI Tool
- comes with Docker for Windows/Mac, but needs download for Linux
- not for production, meant for local development/testing
- [docker-compose up] for doing everying in the compose file
- [docker-compose down] for removing everything like container, volumes, networks
- SCENARIO: if all projects had a [Dockerfile] and [docker-compose.yml], someone can be onboarded with:
[git clone github.com/some/software]
[docker-compose up]
### open: /Proj/study/udemy/udemy-docker-mastery/compose-sample-2
[docker-compose up]
vs
[docker-compose -d]
- The "It works!" message comes from the Apache server through the Nginx server
-[
web_1    | 172.18.0.3 - - [10/Apr/2020:05:11:49 +0000] "GET /favicon.ico HTTP/1.0" 404 196
proxy_1  | 172.18.0.1 - - [10/Apr/2020:05:11:49 +0000] "GET /favicon.ico HTTP/1.1" 404 196 "http://localhost/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36" "-"
]-

[Ctrl-C]

[docker-compose up --detach]
[docker-compose logs]
[docker-compose ps]
[docker-compose top]
[docker-compose down]

[[Resources]]
docker-compose download
https://github.com/docker/compose/releases

Only one host for production environment. What to use: docker-compose or single node swarm? #8
https://github.com/BretFisher/ama/issues/8


# 57. Assignment: Build a Compose File For a Multi-Container Service
- create a compose file from scratch for Drupal content management system website
- needs database, so use [drupal] image and [postgres] image
- export port 8080 for drupal
- version 2
- set [POSTGRES_PASSWORD] environment variable for postgres
- Drupal assumes DB is "localhost" with web server and database in SAME container

[[Resources]]

# 58. Assignment Answers: Build a Compose File For a Multi-Container Service

##MY ANSWERS (WRONG - NOT WORKING - )##
###ERROR: The Compose file './docker-compose.yml' is invalid because:
services.myPostgres.volumes contains an invalid type, it should be an array
Unsupported config option for services.myPostgres: 'network'###

version: '2'

# same as 
# docker run -p 80:4000 -v $(pwd):/site bretfisher/jekyll-serve

services:
  myDrupal:
    image: drupal
    volumes:
      - ./myDrup:/var/www/html
    ports:
      - '8080:8080'
    networks:
      - linkThem
    depends_on: 
      - myPostgres

  myPostgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: post-gress
    volumes:
      -./myPost:/var/lib/postgresql/data
    network:
      - linkThem

networks:
  linkThem: {}

volumes: 
  myDrup: {}
  myPost: {}

###ASSIGNMENT CORRECTED###
version: '2'

services:
  myDrupal:
    image: drupal
    volumes:
      - myDrup-volumes:/var/www/html/volumes
      - myDrup-profiles:/var/www/html/profiles
      - myDrup-sites:/var/www/html/themes
      - myDrup-modules:/var/www/html/modules
    ports:
      - '8080:80' #had to use drupal documentation and FROM apache image to see it listens on port 80
    depends_on: 
      - myPostgres

  myPostgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postGress

volumes: 
  myDrup-volumes:
  myDrup-profiles:
  myDrup-sites:
  myDrup-modules:

# database default name is postgres not POSTGRES_USER

[docker-compose down -v] to also remove volumes


# 59. Adding Image Building to Compose Files
[[Resources]]

# 60. Assignment: Compose For Run-Time Image Building and Multi-Container Development

# 61. Assignment Answers: Compose For Run-Time Image Building and Multi-Container Development

# Quiz 6: Quiz on Docker Compose
