# 46. Container Lifeteime & Persistent Data
- Containers are meant to be immutable and ephemeral
- Immutable infrastructure - don't change things while they're running; changes take place re-deploying a new container
- "separation of concerns" - 
- "persistent data" - unique data that must persistent separate from containers related to them
- Two Persistent Data Solutions - 1. Data Volumes (storage of unique data outside of container's union files system, allowing attachment to any container, seen like a local file path) 2. Bind Mounts (sharing or mounting of a [host] directory or file into a container, appearing like a local path to the container)

[[Resources]]
- An introduction to immutable infrastructure
Why you should stop managing infrastructure and start really programming it.
https://www.oreilly.com/radar/an-introduction-to-immutable-infrastructure/

- The twelve-factor app
https://12factor.net/

- 12 Fractured Apps
https://medium.com/@kelseyhightower/12-fractured-apps-1080c73d481c#.cjvkgw4b3

- Manage data in Docker
https://docs.docker.com/storage/


# 47. Persistent Data: Data Volumes
# 48. Shell Differences for Path Expansion
# 49. Persistent Data: Bind Mounting
# Quiz 5: Quiz on Persistent Data
# 50. Assignment: Database Upgrades with Named Volumes
# 51. Assignment Answers: Database Upgrades with Named Volumes
# 52. Assignment: Edit Code Running in Containers With Bind Mounts

[[Resources]]

# 53. Assignment Answers: Edit Code Running in Containers With Bind Mounts
# 54. Database Passwords in Containers
